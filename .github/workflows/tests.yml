name: tests
on:
  push:
    paths-ignore:
    - '**.md'
    - 'docs/**'
    - '.gitignore'
    - '.pre-commit-config.yaml'
    - 'noxfile.py'
jobs:
  tests:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.6', '3.7', '3.8']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: ''
        auto-activate-base: true
        auto-update-conda: true
        channels: conda-forge
        channel-priority: true
        mamba-version: '*'
    - name: Install make on windows
      if: matrix.os == 'windows-latest'
      shell: bash -l {0}
      run: choco install make
    - name: Install make on mac and linux
      if: matrix.os != 'windows-latest'
      shell: bash -l {0}
      run: mamba install -y make
    - name: Install poetry
      shell: bash -l {0}
      run: mamba install -y poetry=1.1.3
    - name: Run tests in conda environment
      shell: bash -l {0}
      run: |
        conda create -n test
        conda activate test
        mamba install -y python=${{ matrix.python-version }} gdal=3.2.0
        # Make poetry use current conda environment
        # https://github.com/python-poetry/poetry/issues/105
        poetry config virtualenvs.path $(conda info --base)/envs
        poetry config virtualenvs.create 0
        poetry install
        make lint
        make test
